'use client';
import React, { useEffect, useState } from 'react';
import { fetchWeatherApi } from 'openmeteo';
import { Card, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { CardContent } from '@/components/ui/card';
import { Button } from './ui/button';

export default function AnalyzeWeather() {

    const [adviceList, setAdviceList] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);


    useEffect(() => {
        const getWeather = async () => {
            try {
                const params = {
                    latitude: 35.5254,
                    longitude: 11.05,
                    hourly: ['temperature_2m', 'relative_humidity_2m', 'windspeed_10m', 'precipitation']
                };
                const url = 'https://api.open-meteo.com/v1/forecast';
                const responses = await fetchWeatherApi(url, params);

                const response = responses[0];
                const hourly = response.hourly();
                const temperature = hourly.variables(0).valuesArray().at(-1);
                const humidity = hourly.variables(1).valuesArray().at(-1);
                const windSpeed = hourly.variables(2).valuesArray().at(-1);
                const precipitation = hourly.variables(3).valuesArray().at(-1);

                const advice = [];

                // üå°Ô∏è Temperature analysis
                if (temperature >= 35) {
                    advice.push("üå°Ô∏è Temp√©rature tr√®s √©lev√©e ‚Äì risque de d√©shydratation, arrosage plus fr√©quent recommand√©.");
                } else if (temperature >= 28) {
                    advice.push("‚òÄÔ∏è Temp√©rature chaude ‚Äì conditions favorables mais surveiller les plantes sensibles.");
                } else if (temperature <= 5) {
                    advice.push("‚ùÑÔ∏è Temp√©rature tr√®s basse ‚Äì risque de gel, protection des cultures n√©cessaire.");
                } else {
                    advice.push("‚úÖ Temp√©rature dans une plage normale.");
                }

                // üíß Humidity analysis
                if (humidity < 30) {
                    advice.push("üíß Humidit√© faible ‚Äì risque de dess√®chement, pr√©voir un arrosage.");
                } else if (humidity > 80) {
                    advice.push("üí¶ Humidit√© √©lev√©e ‚Äì surveiller le risque de moisissure ou champignons.");
                } else {
                    advice.push("‚úÖ Humidit√© dans la plage optimale.");
                }

                // üå¨Ô∏è Wind analysis
                if (windSpeed >= 50) {
                    advice.push("üå¨Ô∏è Vents tr√®s forts ‚Äì s√©curiser les √©quipements, attention aux structures l√©g√®res.");
                } else if (windSpeed >= 30) {
                    advice.push("üçÉ Vents mod√©r√©s ‚Äì surveillance recommand√©e pour les serres ou panneaux.");
                } else {
                    advice.push("‚úÖ Vitesse du vent faible √† mod√©r√©e.");
                }

                // üåßÔ∏è Precipitation analysis
                if (precipitation >= 10) {
                    advice.push("üåßÔ∏è Fortes pr√©cipitations attendues ‚Äì planifier les activit√©s ext√©rieures avec pr√©caution.");
                } else if (precipitation > 1) {
                    advice.push("‚òî L√©g√®res pr√©cipitations ‚Äì irrigation naturelle possible.");
                } else {
                    advice.push("‚òÄÔ∏è Pas de pr√©cipitations pr√©vues ‚Äì irrigation manuelle n√©cessaire.");
                }

                setAdviceList(advice);
                setLoading(false);
            } catch (err) {
                setError(err.message);
                setLoading(false);
            }
        };

        getWeather();
    }, []);

    if (loading) return <div>Chargement de l‚Äôanalyse m√©t√©o...</div>;
    if (error) return <div>Erreur lors du chargement des donn√©es m√©t√©o: {error}</div>;

    return (
        <>
            <div >
                <Card className="bg-white rounded-xl shadow-xl p-8 max-w-2xl mx-auto my-6 border border-gray-200">
                    <CardHeader className="border-b-2 border-gray-300 pb-4">
                        <CardTitle className="text-3xl font-semibold text-gray-900">Analyse M√©t√©o</CardTitle>
                        <CardDescription className="text-base text-gray-600 mt-2">Recommandations bas√©es sur les donn√©es actuelles</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-6 mt-6">
                        {adviceList.map((line, index) => (
                            <div key={index} className="flex items-start space-x-4">
                                <div className="text-2xl text-gray-500">‚Ä¢</div>
                                <p className="text-lg text-gray-700">{line}</p>
                            </div>
                        ))}
                    </CardContent>
                    <CardFooter className="mt-6">
                        <p className="text-sm text-gray-500 text-center">Donn√©es bas√©es sur la m√©t√©o actuelle</p>
                    </CardFooter>
                </Card>

            </div>
        </>

    );
}
